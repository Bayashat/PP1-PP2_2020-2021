my_str = "hello itcast and itcastpython"
#   <1> capitalize: 把字符串的第一个字符大写
print(my_str.capitalize())  # Hello itcast and itcastpython
----------------------------------------------------------------------------------------------

#   <2> title : 把字符串的每个字符串大写
print(my_str.title())  # Hello Itcast And Itcastpython
-----------------------------------------------------------------------------------------------

#   <3> Upper : 所有的都大写：
print(my_str.upper())  # HELLO ITCAST AND ITCASTPYTHON
----------------------------------------------------------------------------------------------

#   <4> Lower : 所有的都小写：
print(my_str.lower())  # hello itcast and itcastpython
----------------------------------------------------------------------------------------------

#   <5> startswith and endswidth
#  1: 字符串序列.startswith(sub_str, 开始位置下标, 结束位置下标)  检查字符串是否已sub_str开头，返回bool值

# 2: 字符串序列.endswith(sub_str, 开始位置下标, 结束位置下标) 检查字符串是否以sub_str结尾，返回bool
------------------------------------------------------------------------------------------------

#   <6> ljust : 返回一个原字符串左对齐，并使用空格填充至长度 width 的新字符串:
# 语法: 字符串.ljust(Length,填充字符)

print('hello'.ljust(10))  # 'hello     '

print('hello'.ljust(10,'.')) # 'hello.....'
-----------------------------------------------------------------------------------------------

#   <7> rjust : 返回一个原字符串右对齐，并使用空格填充至长度 width 的新字符串:
#  语法: 字符串.rjust(Length,填充字符)
print('hello'.rjust(10))  # '     hello'

print('hello'.rjust(10,'.')) # '.....hello'
----------------------------------------------------------------------------------------------------

#   <8> center : 返回一个原字符串居中，并使用空格填充至长度 width 的新字符串:
#  语法: 字符串.center(Length,填充字符)

print('hello'.center(11))  # '   hello   '

print('hello'.center(11,'.')) # '...hello...'
------------------------------------------------------------------------------------------------------

#   <9> strip() : 删除字符串两端的空白字符:
my_str = '   hello    '
print(my_str.strip()) # 'hello'
------------------------------------------------------------------------------------------------------------

#   <10> lstrip() : 删除字符串左边的空白字符:
my_str = '    hello     '
print(my_str.lstrip()) # 'hello     '
--------------------------------------------------------------------------------------------------------

#   <11> rstrip(): 删除字符串右边的空白字符:
my_str = '    hello     '
print(my_str.lstrip()) # '     hello'
-----------------------------------------------------------------------------------------------------------

#   <12> partition()
# 语法: my_str.partition(str) : 把my_str 以str分割成3部分，str前，str,str后
my_str = "hello itcast and itcastpython"
print(my_str.partition("itcast" )  # ('hello ', 'itcast', ' and itcastpython')
--------------------------------------------------------------------------------------------------------------

#   <13> splitlines: 按照行分隔，返回一个包含各行作为元素的列表
my_str = '''hello 
world itcast 
and itcastcpp'''

print(my_str.splitlines())  # ['hello ', 'world itcast ', 'and itcastcpp']
-------------------------------------------------------------------------------------------------------------------

#   <14> isalpha : 如果字符串中都是都是字母，则返回True, 否则返回false
my_str = 'hello'

print(my_str.isalpha())  # True
--------------------------------------------------------------------------------------------------------------------

#   <15> isdigit : 如果字符串中都是数字，则返回True, 否则返回False
print(my_str.isdigit())  # False
-------------------------------------------------------------------------------------------------------------

#   <16> isalnum : 如果字符串中所有字符都是字母或数字则返回True,否则返回False
print(my_str.isalnum())  # False
-----------------------------------------------------------------------------------------------------------------
#   <17> isspace : 如果字符串中只包含空格，则返回True,否则返回False:
print(my_str.isspace()) # False